#!/bin/bash

if [ $(docker inspect -f '{{.State.Running}}' benign_db) == "false" ]
then
docker start benign_db
sleep 1m
docker start benign_api
fi

STARTPOINT=$PWD
WORKDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $WORKDIR

# Print the help page if asked
if [ "$1" == "-h" ] || [ "$1" == "--help" ]
then
echo "usage=\"USEME [-i FILE -o FILE] [-r FILE] [-c [True|False]] -- Program to filter out the bnign mutations inside a json.\"
\n
Mandatory:
  -i FILE  The input json file. See the example.json for an example of the format. 
  -o FILE  The output json file Be aware that if the file exist, it will be overwritten.

Optional:
  -r FILE  The report html file. Be aware that if the file exist, it will be overwritten.
  -c [True|False]  Python boolean if all returned mutations has to be found in cancer patients. Default is False.
"
CD $STARTPOINT
exit 0
fi

# Run application:
## Get variables
while getopts i:o:r:c: option
do
case "${option}"
in
i) INPUT=${OPTARG};;
o) OUTPUT=${OPTARG};;
r) REPORT=${OPTARG};;
c) CANCERONLY=$OPTARG;;
esac
done

# Set default values
if [ "$CANCERONLY" == "" ]
then
CANCERONLY=False
fi

if [ "$REPORT" == "" ]
then
REPORT=None
fi

# Gives error when the mandatory variables are not found
if [ "$INPUT" == "" ] || [ "$OUTPUT" == "" ]
then echo "Error: The -i and -o arguments has to be filled." && cd $STARTPOINT && exit 1
fi

# Get IP address of the api container
BDBIP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' benign_api)

python3 makeSnake.py $INPUT $OUTPUT $REPORT $CANCERONLY $BDBIP
snakemake --dag | dot -Tsvg > workflows/workflow_`date +%Y_%m_%d__%H_%M`_.svg && echo "Made a workflow. Check out the workflow directory!" && snakemake -F && cd $STARTPOINT && exit 0
